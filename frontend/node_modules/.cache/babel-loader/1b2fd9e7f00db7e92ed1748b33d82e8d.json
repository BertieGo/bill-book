{"ast":null,"code":"var _jsxFileName = \"/Users/huangwei/learn/x-mind/frontend/src/App.tsx\";\nimport React from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { Spin } from 'antd';\nimport BillTable from \"./container/Table\";\nimport Filter from './container/Filter';\nimport AddBillForm from './container/AddBillForm';\nimport Charts from \"./container/Charts\";\nimport { BILL_TYPE } from './constants';\nimport { getBillList, getBillCategories, addBillItem } from './request';\nimport { getRandomColor } from \"./utils/color\";\nimport './App.css';\nimport { getPercent } from \"./utils/math\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.filter = void 0;\n\n    this.setBillData = () => {\n      const {\n        time,\n        category\n      } = this.filter;\n      this.setState({\n        isFetchingBill: true\n      }, () => {\n        getBillList({\n          time,\n          category\n        }).then(res => {\n          this.setState({\n            billList: res.data,\n            isFetchingBill: false\n          });\n        });\n      });\n    };\n\n    this.setBillCategories = () => {\n      this.setState({\n        isFetchingBillCategories: true\n      }, () => {\n        getBillCategories().then(res => {\n          this.setState({\n            billCategories: res.data,\n            isFetchingBillCategories: false\n          });\n        });\n      });\n    };\n\n    this.onMonthChange = time => {\n      this.filter.time = time || '';\n      this.setBillData();\n    };\n\n    this.onCategoryChange = category => {\n      this.filter.category = category || '';\n      this.setBillData();\n    };\n\n    this.onAddBillItem = item => {\n      addBillItem(item).then(() => {\n        this.setBillData();\n      });\n    };\n\n    this.combineBillItem = (bill, field) => {\n      const result = [];\n      bill.forEach(item => {\n        const target = result.find(i => i[field] === item[field]);\n\n        if (target) {\n          target.amount += item.amount;\n        } else {\n          result.push(item);\n        }\n      });\n      return result;\n    };\n\n    this.getSum = bill => {\n      return bill.reduce((prev, next) => {\n        return prev + next.amount;\n      }, 0);\n    };\n\n    this.getTypeBillData = () => {\n      const {\n        billList\n      } = this.state;\n      let copy = cloneDeep(billList);\n      let result = this.combineBillItem(copy, 'type');\n      const sum = this.getSum(result);\n      result.forEach(item => {\n        item.percent = getPercent(item.amount, sum);\n        item.title = BILL_TYPE[item.type];\n        item.color = getRandomColor();\n      });\n\n      if (result.length === 1) {\n        result.push({\n          title: BILL_TYPE[Number(!result[0].type)],\n          percent: 0,\n          amount: 0\n        });\n      }\n\n      return result;\n    };\n\n    this.getCategoryBillData = () => {\n      const {\n        billList\n      } = this.state;\n      let copy = cloneDeep(billList);\n      copy = copy.filter(item => item.type === 0).sort((perv, next) => perv.amount - next.amount);\n      const result = this.combineBillItem(copy, 'category');\n      const sum = this.getSum(result);\n      result.forEach(item => {\n        item.percent = getPercent(item.amount, sum);\n        item.color = getRandomColor();\n      });\n      return result;\n    };\n\n    this.state = {\n      billList: [],\n      isFetchingBill: true,\n      billCategories: [],\n      isFetchingBillCategories: true,\n      billAmountList: []\n    };\n    this.filter = {\n      time: '',\n      category: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setBillData();\n    this.setBillCategories();\n  }\n\n  render() {\n    const {\n      isFetchingBill,\n      isFetchingBillCategories,\n      billList,\n      billCategories\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Filter, {\n      onMonthChange: this.onMonthChange,\n      categories: billCategories,\n      onCategoryChange: this.onCategoryChange,\n      isFisFetchingBillCategories: isFetchingBillCategories,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AddBillForm, {\n      isFisFetchingBillCategories: isFetchingBillCategories,\n      categories: billCategories,\n      onAddBillItem: this.onAddBillItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }), isFetchingBill ? /*#__PURE__*/React.createElement(Spin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 38\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Charts, {\n      categoryBillData: this.getCategoryBillData(),\n      typeBillData: this.getTypeBillData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(BillTable, {\n      loading: isFetchingBill,\n      data: billList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 29\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/huangwei/learn/x-mind/frontend/src/App.tsx"],"names":["React","cloneDeep","Spin","BillTable","Filter","AddBillForm","Charts","BILL_TYPE","getBillList","getBillCategories","addBillItem","getRandomColor","getPercent","App","Component","constructor","props","filter","setBillData","time","category","setState","isFetchingBill","then","res","billList","data","setBillCategories","isFetchingBillCategories","billCategories","onMonthChange","onCategoryChange","onAddBillItem","item","combineBillItem","bill","field","result","forEach","target","find","i","amount","push","getSum","reduce","prev","next","getTypeBillData","state","copy","sum","percent","title","type","color","length","Number","getCategoryBillData","sort","perv","billAmountList","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { Spin, message } from 'antd';\n\nimport BillTable from \"./container/Table\";\nimport Filter from './container/Filter';\nimport AddBillForm from './container/AddBillForm';\nimport Charts  from \"./container/Charts\";\nimport { BILL_TYPE } from './constants';\nimport { IBill, IAppState, IFilter, IAddBillParam, IPathItem } from './declare';\n\nimport { getBillList, getBillCategories, addBillItem } from './request';\nimport {getRandomColor} from \"./utils/color\";\n\nimport './App.css';\nimport { getPercent} from \"./utils/math\";\n\nclass App extends React.Component<{}, IAppState> {\n\n    private filter: IFilter;\n\n    constructor(props: {}) {\n        super(props);\n        this.state = {\n            billList: [],\n            isFetchingBill: true,\n\n            billCategories: [],\n            isFetchingBillCategories: true,\n\n            billAmountList: []\n        }\n\n        this.filter = {\n            time: '',\n            category: ''\n        }\n    }\n\n    componentDidMount() {\n        this.setBillData();\n        this.setBillCategories();\n    }\n\n    setBillData = () => {\n        const { time, category } = this.filter;\n\n        this.setState({\n            isFetchingBill: true,\n        }, () => {\n            getBillList({\n                time,\n                category,\n            }).then((res) => {\n                this.setState({\n                    billList: res.data,\n                    isFetchingBill: false\n                })\n            })\n        })\n    }\n\n    setBillCategories = () => {\n        this. setState({\n            isFetchingBillCategories: true\n        }, () => {\n            getBillCategories().then((res) => {\n                this.setState({\n                    billCategories: res.data,\n                    isFetchingBillCategories: false,\n                });\n            })\n        })\n    }\n\n    onMonthChange = (time: string) => {\n        this.filter.time = time || '';\n        this.setBillData();\n    }\n\n    onCategoryChange = (category: string) => {\n        this.filter.category = category || '';\n        this.setBillData()\n    }\n\n    onAddBillItem = (item: IAddBillParam) => {\n        addBillItem(item).then(() => {\n            this.setBillData()\n        })\n    }\n\n    combineBillItem = (bill: IBill[], field: keyof IBill) => {\n        const result: IBill[] = [];\n        bill.forEach((item: IBill) => {\n            const target = result.find((i: IBill) => i[field] === item[field]);\n            if (target) {\n                target.amount += item.amount;\n            } else {\n                result.push(item);\n            }\n        });\n        return result;\n    }\n\n    getSum = (bill: IBill[]) => {\n        return bill.reduce((prev: number, next: IBill) => {\n            return prev + next.amount\n        }, 0);\n    }\n\n    getTypeBillData = () => {\n        const { billList } = this.state;\n        let copy = cloneDeep(billList);\n        let result = this.combineBillItem(copy, 'type');\n\n        const sum = this.getSum(result);\n\n        result.forEach((item: IBill) => {\n            item.percent = getPercent(item.amount, sum);\n            item.title = BILL_TYPE[item.type];\n            item.color = getRandomColor();\n        })\n\n        if (result.length === 1) {\n            result.push({\n                title: BILL_TYPE[Number(!result[0].type)],\n                percent: 0,\n                amount: 0,\n            } as IBill)\n        }\n\n        return result;\n    }\n\n    getCategoryBillData = () => {\n        const { billList } = this.state;\n        let copy = cloneDeep(billList);\n\n        copy = copy.filter(item => item.type === 0).sort((perv, next) => perv.amount - next.amount);\n\n        const result = this.combineBillItem(copy, 'category');\n\n        const sum = this.getSum(result);\n\n        result.forEach((item: IBill) => {\n            item.percent = getPercent(item.amount, sum);\n            item.color = getRandomColor()\n        })\n\n        return result;\n    }\n\n    render() {\n        const { isFetchingBill, isFetchingBillCategories, billList, billCategories } = this.state;\n        return (\n            <div className=\"container\">\n                <Filter\n                    onMonthChange={this.onMonthChange}\n                    categories={billCategories}\n                    onCategoryChange={this.onCategoryChange}\n                    isFisFetchingBillCategories={isFetchingBillCategories}\n                />\n                <AddBillForm\n                    isFisFetchingBillCategories={isFetchingBillCategories}\n                    categories={billCategories}\n                    onAddBillItem={this.onAddBillItem}\n                />\n                {\n                    isFetchingBill ? <Spin/> : (\n                        <React.Fragment>\n                            <Charts\n                                categoryBillData={this.getCategoryBillData()}\n                                typeBillData={this.getTypeBillData()}\n                            />\n                            <BillTable loading={isFetchingBill} data={billList} />\n                        </React.Fragment>\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}