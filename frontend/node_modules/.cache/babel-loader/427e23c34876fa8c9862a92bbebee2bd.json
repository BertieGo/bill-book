{"ast":null,"code":"var _jsxFileName = \"/Users/huangwei/learn/x-mind/frontend/src/components/Bar/index.tsx\";\nimport React from \"react\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport { fixedFloat, floorFloat, getPercent } from \"../../utils/math\";\nimport { Col, Row, Tooltip } from \"antd\";\nexport default class Bar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.makeRowData = () => {\n      const {\n        data\n      } = this.props;\n      let dataCopy = cloneDeep(data);\n\n      if (data.length > 0) {\n        dataCopy = dataCopy.sort((prev, next) => next.amount - prev.amount);\n        const maxPercent = dataCopy[0].percent;\n        dataCopy.forEach(item => {\n          item.barPercent = getPercent(item.percent, maxPercent);\n        });\n      }\n\n      return dataCopy;\n    };\n\n    this.renderRow = item => {\n      const displayPercent = `${floorFloat(item.percent)}%`;\n      const displayAmount = fixedFloat(item.amount);\n      return /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: `金额: ${displayAmount} 占比：${displayPercent}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row-bar\",\n        style: {\n          width: `${item.barPercent}%`,\n          backgroundColor: item.color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, displayAmount)));\n    };\n\n    this.renderRowChart = item => {\n      return /*#__PURE__*/React.createElement(Row, {\n        className: \"mb10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, item.title, \"\\uFF1A\"), /*#__PURE__*/React.createElement(Col, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, this.renderRow(item)));\n    };\n  }\n\n  render() {\n    const data = this.makeRowData();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, data.map(this.renderRowChart));\n  }\n\n}","map":{"version":3,"sources":["/Users/huangwei/learn/x-mind/frontend/src/components/Bar/index.tsx"],"names":["React","cloneDeep","fixedFloat","floorFloat","getPercent","Col","Row","Tooltip","Bar","Component","makeRowData","data","props","dataCopy","length","sort","prev","next","amount","maxPercent","percent","forEach","item","barPercent","renderRow","displayPercent","displayAmount","width","backgroundColor","color","renderRowChart","title","render","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {IChartProps, IPathItem} from \"../../declare\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport {fixedFloat, floorFloat, getPercent} from \"../../utils/math\";\nimport {Col, Row, Tooltip} from \"antd\";\n\nexport default class Bar extends React.Component<IChartProps, {}>{\n\n    makeRowData = () => {\n        const { data } = this.props;\n        let dataCopy = cloneDeep(data);\n        if (data.length > 0) {\n            dataCopy = dataCopy.sort((prev, next) => next.amount - prev.amount);\n            const maxPercent = dataCopy[0].percent;\n            dataCopy.forEach(item => {\n                item.barPercent = getPercent(item.percent, maxPercent)\n            })\n        }\n        return dataCopy;\n    }\n\n    renderRow = (item: IPathItem) => {\n\n        const displayPercent = `${floorFloat(item.percent)}%`;\n        const displayAmount = fixedFloat(item.amount);\n\n        return (\n            <Row>\n                <Tooltip title={`金额: ${displayAmount} 占比：${displayPercent}`}>\n                    <Col span={20}>\n                        <div className=\"row-bar\" style={{ width: `${item.barPercent}%`, backgroundColor: item.color }}/>\n                    </Col>\n                </Tooltip>\n                <Col span={4}>\n                    <span className=\"ml20\">{ displayAmount }</span>\n                </Col>\n            </Row>\n        )\n    }\n\n    renderRowChart = (item: IPathItem) => {\n        return (\n            <Row className=\"mb10\">\n                <Col span={4}>{ item.title }：</Col>\n                <Col span={8}>{ this.renderRow(item) }</Col>\n            </Row>\n        )\n    }\n\n    render() {\n        const data = this.makeRowData();\n        return (\n            <div>\n                {\n                    data.map(this.renderRowChart)\n                }\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}