{"ast":null,"code":"import{message}from'antd';function toQueryString(paramsObject){return Object.keys(paramsObject).map(function(key){return\"\".concat(encodeURIComponent(key),\"=\").concat(encodeURIComponent(paramsObject[key]));}).join('&');}var host='http://localhost:8800';export function post(url,data,msg){return fetch(host+url,{body:JSON.stringify(data),cache:'no-cache',headers:{'content-type':'application/json'},method:'POST'}).then(function(response){if(msg){message.success(msg);}return response.json();});}export function get(url,data,msg){var query='';if(data&&typeof data==='object'&&Object.keys(data).length>0){// @ts-ignore\nquery=\"?\".concat(toQueryString(data));}var _url=\"\".concat(host).concat(url).concat(query);return fetch(_url,{cache:'no-cache'}).then(function(response){if(msg){message.success(msg);}return response.json();});}","map":{"version":3,"sources":["/workspace/src/utils/request/index.ts"],"names":["message","toQueryString","paramsObject","Object","keys","map","key","encodeURIComponent","join","host","post","url","data","msg","fetch","body","JSON","stringify","cache","headers","method","then","response","success","json","get","query","length","_url"],"mappings":"AAAA,OAAQA,OAAR,KAAsB,MAAtB,CAGA,QAASC,CAAAA,aAAT,CAAuBC,YAAvB,CAAoD,CAChD,MAAOC,CAAAA,MAAM,CACRC,IADE,CACGF,YADH,EAEFG,GAFE,CAEE,SAACC,GAAD,kBAAoBC,kBAAkB,CAACD,GAAD,CAAtC,aAA+CC,kBAAkB,CAACL,YAAY,CAACI,GAAD,CAAb,CAAjE,GAFF,EAGFE,IAHE,CAGG,GAHH,CAAP,CAIH,CAED,GAAMC,CAAAA,IAAI,CAAG,uBAAb,CAEA,MAAO,SAASC,CAAAA,IAAT,CAAcC,GAAd,CAA2BC,IAA3B,CAAyCC,GAAzC,CAAuD,CAC1D,MAAOC,CAAAA,KAAK,CAACL,IAAI,CAAGE,GAAR,CAAa,CACrBI,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CADe,CAErBM,KAAK,CAAE,UAFc,CAGrBC,OAAO,CAAE,CACL,eAAgB,kBADX,CAHY,CAMrBC,MAAM,CAAE,MANa,CAAb,CAAL,CAOJC,IAPI,CAOC,SAAAC,QAAQ,CAAI,CAChB,GAAIT,GAAJ,CAAS,CACLb,OAAO,CAACuB,OAAR,CAAgBV,GAAhB,EACH,CACD,MAAOS,CAAAA,QAAQ,CAACE,IAAT,EAAP,CACH,CAZM,CAAP,CAaH,CAED,MAAO,SAASC,CAAAA,GAAT,CAAad,GAAb,CAA0BC,IAA1B,CAAyCC,GAAzC,CAAuD,CAE1D,GAAIa,CAAAA,KAAK,CAAG,EAAZ,CAEA,GAAId,IAAI,EAAI,MAAOA,CAAAA,IAAP,GAAgB,QAAxB,EAAoCT,MAAM,CAACC,IAAP,CAAYQ,IAAZ,EAAkBe,MAAlB,CAA2B,CAAnE,CAAsE,CAClE;AACAD,KAAK,YAAOzB,aAAa,CAACW,IAAD,CAApB,CAAL,CACH,CACD,GAAMgB,CAAAA,IAAI,WAAMnB,IAAN,SAAaE,GAAb,SAAmBe,KAAnB,CAAV,CAEA,MAAOZ,CAAAA,KAAK,CAACc,IAAD,CAAO,CAAEV,KAAK,CAAE,UAAT,CAAP,CAAL,CACFG,IADE,CACG,SAASC,QAAT,CAAmB,CACrB,GAAIT,GAAJ,CAAS,CACLb,OAAO,CAACuB,OAAR,CAAgBV,GAAhB,EACH,CACD,MAAOS,CAAAA,QAAQ,CAACE,IAAT,EAAP,CACH,CANE,CAAP,CAOH","sourcesContent":["import {message} from 'antd';\nimport { IParamsObject } from '../../declare';\n\nfunction toQueryString(paramsObject: IParamsObject) {\n    return Object\n        .keys(paramsObject)\n        .map((key: string) => `${encodeURIComponent(key)}=${encodeURIComponent(paramsObject[key])}`)\n        .join('&');\n}\n\nconst host = 'http://localhost:8800'\n\nexport function post(url: string, data: Object, msg?: string) {\n    return fetch(host + url, {\n        body: JSON.stringify(data),\n        cache: 'no-cache',\n        headers: {\n            'content-type': 'application/json'\n        },\n        method: 'POST',\n    }).then(response => {\n        if (msg) {\n            message.success(msg);\n        }\n        return response.json()\n    })\n}\n\nexport function get(url: string, data?: Object, msg?: string) {\n\n    let query = '';\n\n    if (data && typeof data === 'object' && Object.keys(data).length > 0) {\n        // @ts-ignore\n        query = `?${toQueryString(data)}`;\n    }\n    const _url = `${host}${url}${query}`;\n\n    return fetch(_url, { cache: 'no-cache' })\n        .then(function(response) {\n            if (msg) {\n                message.success(msg);\n            }\n            return response.json();\n        })\n}\n"]},"metadata":{},"sourceType":"module"}