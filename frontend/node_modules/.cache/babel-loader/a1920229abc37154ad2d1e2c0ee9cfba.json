{"ast":null,"code":"var _jsxFileName = \"/Users/huangwei/learn/x-mind/frontend/src/components/Pie/index.tsx\";\nimport React from \"react\";\nimport { fixedFloat, floorFloat } from \"../../utils/math\";\nimport { Tooltip } from \"antd\";\nconst FULL_CIRCLE_RADIUS = 360;\nconst HALF_CIRCLE_RADIUS = FULL_CIRCLE_RADIUS / 2;\nexport default class Pie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.width = void 0;\n    this.height = void 0;\n\n    this.renderPath = () => {\n      const {\n        data\n      } = this.props;\n      const paths = [];\n      const radius = this.width / 2;\n      const cx = this.width / 2;\n      const cy = this.height / 2;\n      let sx = this.width;\n      let sy = this.height / 2;\n      let prevPercent = 0;\n      data.forEach(item => {\n        const currentPercent = item.percent / 100 + prevPercent;\n        const currentRadius = currentPercent * FULL_CIRCLE_RADIUS;\n        const ex = floorFloat(cx + radius * Math.cos(currentRadius * Math.PI / HALF_CIRCLE_RADIUS));\n        const ey = floorFloat(cy + radius * Math.sin(currentRadius * Math.PI / HALF_CIRCLE_RADIUS));\n        const largeArcFlag = item.percent / 100 * FULL_CIRCLE_RADIUS > HALF_CIRCLE_RADIUS ? '1' : '0';\n        const displayPercent = `${floorFloat(item.percent)}%`;\n        const displayAmount = fixedFloat(item.amount);\n        paths.push( /*#__PURE__*/React.createElement(Tooltip, {\n          title: /*#__PURE__*/React.createElement(\"div\", {\n            className: \"nowrap\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 34\n            }\n          }, `类型：${item.title} 金额: ${displayAmount} 占比：${displayPercent}`),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"path\", {\n          d: `M${sx} ${sy} A ${radius} ${radius}, 0, ${largeArcFlag}, 1, ${ex} ${ey} L ${cx} ${cy} Z`,\n          fill: item.color,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }\n        })));\n        sx = ex;\n        sy = ey;\n        prevPercent = currentPercent;\n      });\n      return paths;\n    };\n\n    this.width = 200;\n    this.height = 200;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: `${this.width}px`,\n      height: `${this.height}px`,\n      version: \"1.1\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, this.renderPath()));\n  }\n\n}","map":{"version":3,"sources":["/Users/huangwei/learn/x-mind/frontend/src/components/Pie/index.tsx"],"names":["React","fixedFloat","floorFloat","Tooltip","FULL_CIRCLE_RADIUS","HALF_CIRCLE_RADIUS","Pie","Component","constructor","props","width","height","renderPath","data","paths","radius","cx","cy","sx","sy","prevPercent","forEach","item","currentPercent","percent","currentRadius","ex","Math","cos","PI","ey","sin","largeArcFlag","displayPercent","displayAmount","amount","push","title","color","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {IChartProps, IPathItem} from \"../../declare\";\nimport {fixedFloat, floorFloat} from \"../../utils/math\";\nimport {Tooltip} from \"antd\";\n\nconst FULL_CIRCLE_RADIUS = 360;\n\nconst HALF_CIRCLE_RADIUS = FULL_CIRCLE_RADIUS / 2;\n\nexport default class Pie extends React.Component<IChartProps, {}>{\n\n    private width: number;\n\n    private height: number;\n\n    constructor(props: IChartProps) {\n        super(props);\n        this.width = 200;\n        this.height = 200;\n    }\n\n    renderPath = () => {\n        const { data } = this.props;\n        const paths: JSX.Element[] = [];\n\n        const radius = this.width / 2;\n\n        const cx = this.width / 2;\n        const cy = this.height / 2;\n\n        let sx = this.width;\n        let sy = this.height / 2;\n\n        let prevPercent = 0;\n\n        data.forEach((item: IPathItem) => {\n\n            const currentPercent = (item.percent / 100) + prevPercent;\n\n            const currentRadius = currentPercent * FULL_CIRCLE_RADIUS;\n\n            const ex = floorFloat(cx + radius * Math.cos( currentRadius * Math.PI / HALF_CIRCLE_RADIUS));\n            const ey = floorFloat(cy + radius * Math.sin( currentRadius * Math.PI / HALF_CIRCLE_RADIUS));\n\n            const largeArcFlag = (item.percent / 100) * FULL_CIRCLE_RADIUS > HALF_CIRCLE_RADIUS ? '1' : '0';\n\n            const displayPercent = `${floorFloat(item.percent)}%`;\n            const displayAmount = fixedFloat(item.amount);\n\n            paths.push(\n                <Tooltip title={(<div className=\"nowrap\">{`类型：${item.title} 金额: ${displayAmount} 占比：${displayPercent}`}</div>)}>\n                    <path d={`M${sx} ${sy} A ${radius} ${radius}, 0, ${largeArcFlag}, 1, ${ex} ${ey} L ${cx} ${cy} Z`} fill={item.color}/>\n                </Tooltip>\n            )\n\n            sx = ex;\n            sy = ey;\n            prevPercent = currentPercent;\n        })\n\n        return paths;\n    }\n\n\n    render() {\n        return (\n            <div>\n                <svg width={`${this.width}px`} height={`${this.height}px`} version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                    { this.renderPath() }\n                </svg>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}