{"version":3,"sources":["container/Table/index.tsx","constants.ts","components/CategorySelector/index.tsx","container/Filter/index.tsx","container/AddBillForm/index.tsx","utils/math/index.ts","components/Pie/index.tsx","components/Bar/index.tsx","container/Charts/index.tsx","utils/request/index.ts","config/env.ts","request/index.ts","utils/color/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["columns","title","dataIndex","render","type","time","moment","format","sorter","prev","next","amount","BillTable","nextProps","nextState","nextContext","isEqual","this","props","data","loading","className","dataSource","React","Component","BILL_TYPE","0","1","MSG_FORM","Option","Select","CategorySelector","onChange","value","isFunction","categories","isFisFetchingBillCategories","style","width","allowClear","placeholder","map","category","id","name","Filter","onMonthChange","month","onCategoryChange","span","picker","AddBillForm","onFinish","values","onAddBillItem","param","Item","label","rules","required","message","showTime","htmlType","fixedFloat","float","Number","toFixed","floorFloat","Math","floor","getPercent","denominator","decimal","Pie","height","renderPath","paths","radius","cx","cy","sx","sy","prevPercent","forEach","item","currentPercent","percent","currentRadius","ex","cos","PI","FULL_CIRCLE_RADIUS","ey","sin","largeArcFlag","displayPercent","displayAmount","push","d","fill","color","version","xmlns","Bar","makeRowData","dataCopy","cloneDeep","length","maxPercent","sort","barPercent","renderRow","backgroundColor","renderRowChart","Charts","renderChart","categoryBillData","typeBillData","image","Empty","PRESENTED_IMAGE_SIMPLE","get","url","msg","paramsObject","query","Object","keys","key","encodeURIComponent","join","_url","fetch","cache","then","response","success","json","addBillItem","body","JSON","stringify","headers","method","getRandomColor","random","toString","substr","App","filter","setBillData","setState","isFetchingBill","res","billList","setBillCategories","isFetchingBillCategories","billCategories","combineBillItem","bill","field","result","target","find","i","getSum","reduce","getTypeBillData","state","copy","sum","getCategoryBillData","perv","billAmountList","Fragment","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.2303ff43.chunk.js","sourcesContent":["import React from 'react';\nimport { Table, Space, Tag } from 'antd';\nimport isEqual from 'lodash/isEqual';\nimport moment from 'moment';\nimport { IBillTableProps, IBill } from '../../declare';\n\nconst columns = [\n    {\n        title: '收/支',\n        dataIndex: 'type',\n        render: (type: number) => {\n            return type === 0 ? '支出' : '收入';\n        },\n    },\n    {\n        title: '时间',\n        dataIndex: 'time',\n        render: (time: Date) => {\n            return moment(time).format('YYYY-MM-DD HH:mm:ss');\n        }\n    },\n    {\n        title: '类型',\n        dataIndex: 'title',\n    },\n    {\n        title: '金额（￥）',\n        dataIndex: 'amount',\n        sorter: (prev: IBill, next: IBill) => prev.amount - next.amount,\n    },\n];\n\nexport default class BillTable extends React.Component<IBillTableProps, {}>{\n\n    shouldComponentUpdate(nextProps: Readonly<IBillTableProps>, nextState: Readonly<{}>, nextContext: {}): boolean {\n        return !isEqual(this.props.data, nextProps.data);\n    }\n\n    render() {\n        const { loading, data } = this.props;\n        return (\n            <div className=\"mt20\">\n                <div className=\"mb10 title\">\n                    账单：\n                </div>\n                <Table loading={loading} columns={columns} dataSource={data} />\n            </div>\n        )\n    }\n}\n","export const BILL_TYPE: {[field: number]: string} = {\n    0: '支出',\n    1: '收入'\n}\n\nexport const MSG_FORM = {\n    TIME_REQUIRED: '请填写时间',\n    CATEGORY_REQUIRED: '请选择类型',\n    AMOUNT_REQUIRED: '请填写金额'\n}\n","import React from 'react';\nimport { Select } from 'antd';\nimport isFunction from 'lodash/isFunction';\nimport { ICategorySelectorProps } from '../../declare';\nimport { MSG_FORM } from '../../constants';\n\nconst { Option } = Select;\n\nexport default class CategorySelector extends React.Component<ICategorySelectorProps, {}> {\n\n    constructor(props: ICategorySelectorProps) {\n        super(props);\n    }\n\n    onChange = (value: string) => {\n        const { onChange } = this.props;\n        if (isFunction(onChange)) {\n            onChange(value);\n        }\n    }\n\n    render() {\n        const { categories, isFisFetchingBillCategories } = this.props;\n\n        return (\n            <Select\n                style={{ width: 120 }}\n                onChange={this.onChange}\n                loading={isFisFetchingBillCategories}\n                allowClear\n                placeholder={MSG_FORM.CATEGORY_REQUIRED}\n            >\n                {\n                    categories.map((category) => (\n                        <Option value={category.id}>{ category.name }</Option>\n                    ))\n                }\n            </Select>\n        )\n    }\n}\n","import React from 'react';\nimport isFunction from 'lodash/isFunction';\nimport { DatePicker, Row, Col } from 'antd';\nimport CategorySelector from '../../components/CategorySelector';\nimport { TMoment, IFilterProps } from '../../declare';\n\nexport default class Filter extends React.Component<IFilterProps, {}> {\n\n    onMonthChange = (month: TMoment) => {\n        const { onMonthChange } = this.props;\n        if (isFunction(onMonthChange)) {\n            onMonthChange(month ? month.format('YYYY-MM') : '')\n        }\n    }\n\n    render() {\n        const {\n            onCategoryChange,\n            categories,\n            isFisFetchingBillCategories,\n        } = this.props;\n\n        return (\n            <Row className=\"mb20\">\n                <Col span={2} className=\"title\">\n                    筛选：\n                </Col>\n                <Col span={4}>\n                    <span>月份：</span>\n                    <DatePicker placeholder=\"请选择月份\" onChange={this.onMonthChange} picker=\"month\" />\n                </Col>\n                <Col span={4}>\n                    <span>类型：</span>\n                    <CategorySelector\n                        onChange={onCategoryChange}\n                        categories={categories}\n                        isFisFetchingBillCategories={isFisFetchingBillCategories}\n                    />\n                </Col>\n            </Row>\n        )\n    }\n}\n","import React from 'react';\nimport { DatePicker, Form, Button, Input, Row, Col } from 'antd';\nimport isFunction from 'lodash/isFunction';\n\nimport CategorySelector from '../../components/CategorySelector';\nimport { IAddBillFormProps, IParamsObject } from '../../declare';\nimport { MSG_FORM } from '../../constants';\n\n\nexport default class AddBillForm extends React.Component<IAddBillFormProps, {}> {\n\n    onFinish = (values: IParamsObject) => {\n        const { onAddBillItem } = this.props;\n\n        const param = {\n            time: values.time.format('x'),\n            amount: +values.amount,\n            category: values.category\n        }\n\n        if (isFunction(onAddBillItem)) {\n            onAddBillItem(param)\n        }\n    }\n\n    render() {\n        const {\n            categories,\n            isFisFetchingBillCategories,\n        } = this.props;\n\n        return (\n            <Form onFinish={this.onFinish}>\n                <Row>\n                    <Col className=\"title\" span={2}>录入：</Col>\n                    <Col span={4}>\n                        <Form.Item name=\"time\" label=\"时间\" rules={[{ type: 'object', required: true, message: MSG_FORM.TIME_REQUIRED }]}>\n                            <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" placeholder={MSG_FORM.TIME_REQUIRED}/>\n                        </Form.Item>\n                    </Col>\n                    <Col span={4}>\n                        <Form.Item name=\"category\" label=\"类型\" rules={[{ type: 'string', required: true, message: MSG_FORM.CATEGORY_REQUIRED }]}>\n                            <CategorySelector\n                                categories={categories}\n                                isFisFetchingBillCategories={isFisFetchingBillCategories}\n                            />\n                        </Form.Item>\n                    </Col>\n                    <Col span={3}>\n                        <Form.Item name=\"amount\" label=\"金额\" rules={[{ type: 'string', required: true, message: MSG_FORM.AMOUNT_REQUIRED }]}>\n                            <Input placeholder={MSG_FORM.AMOUNT_REQUIRED} type=\"number\"/>\n                        </Form.Item>\n                    </Col>\n                    <Col span={2} className=\"ml30\">\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">添加</Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        )\n    }\n}\n","export const fixedFloat = (float: number) => {\n    return Number(float.toFixed(4));\n}\n\nexport const floorFloat = (float: number) => {\n    return Math.floor(float * 100) / 100;\n}\n\nexport const getPercent = (denominator: number, decimal: number) => {\n    return fixedFloat((denominator / decimal) * 100);\n}\n","import React from \"react\";\nimport {IChartProps, IPathItem} from \"../../declare\";\nimport {fixedFloat, floorFloat} from \"../../utils/math\";\nimport {Tooltip} from \"antd\";\n\nconst FULL_CIRCLE_RADIUS = 360;\n\nconst HALF_CIRCLE_RADIUS = FULL_CIRCLE_RADIUS / 2;\n\nexport default class Pie extends React.Component<IChartProps, {}>{\n\n    private width: number;\n\n    private height: number;\n\n    constructor(props: IChartProps) {\n        super(props);\n        this.width = 200;\n        this.height = 200;\n    }\n\n    renderPath = () => {\n        const { data } = this.props;\n        const paths: JSX.Element[] = [];\n\n        const radius = this.width / 2;\n\n        const cx = this.width / 2;\n        const cy = this.height / 2;\n\n        let sx = this.width;\n        let sy = this.height / 2;\n\n        let prevPercent = 0;\n\n        data.forEach((item: IPathItem) => {\n\n            const currentPercent = (item.percent / 100) + prevPercent;\n\n            const currentRadius = currentPercent * FULL_CIRCLE_RADIUS;\n\n            const ex = floorFloat(cx + radius * Math.cos( currentRadius * Math.PI / HALF_CIRCLE_RADIUS));\n            const ey = floorFloat(cy + radius * Math.sin( currentRadius * Math.PI / HALF_CIRCLE_RADIUS));\n\n            const largeArcFlag = (item.percent / 100) * FULL_CIRCLE_RADIUS > HALF_CIRCLE_RADIUS ? '1' : '0';\n\n            const displayPercent = `${floorFloat(item.percent)}%`;\n            const displayAmount = fixedFloat(item.amount);\n\n            paths.push(\n                <Tooltip title={(<div className=\"nowrap\">{`类型：${item.title} 金额: ${displayAmount} 占比：${displayPercent}`}</div>)}>\n                    <path d={`M${sx} ${sy} A ${radius} ${radius}, 0, ${largeArcFlag}, 1, ${ex} ${ey} L ${cx} ${cy} Z`} fill={item.color}/>\n                </Tooltip>\n            )\n\n            sx = ex;\n            sy = ey;\n            prevPercent = currentPercent;\n        })\n\n        return paths;\n    }\n\n\n    render() {\n        return (\n            <div>\n                <svg width={`${this.width}px`} height={`${this.height}px`} version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                    { this.renderPath() }\n                </svg>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport {IChartProps, IPathItem} from \"../../declare\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport {fixedFloat, floorFloat, getPercent} from \"../../utils/math\";\nimport {Col, Row, Tooltip} from \"antd\";\n\nexport default class Bar extends React.Component<IChartProps, {}>{\n\n    makeRowData = () => {\n        const { data } = this.props;\n        let dataCopy = cloneDeep(data);\n        if (data.length > 0) {\n            dataCopy = dataCopy.sort((prev, next) => next.amount - prev.amount);\n            const maxPercent = dataCopy[0].percent;\n            dataCopy.forEach(item => {\n                item.barPercent = getPercent(item.percent, maxPercent)\n            })\n        }\n        return dataCopy;\n    }\n\n    renderRow = (item: IPathItem) => {\n\n        const displayPercent = `${floorFloat(item.percent)}%`;\n        const displayAmount = fixedFloat(item.amount);\n\n        return (\n            <Row>\n                <Tooltip title={`金额: ${displayAmount} 占比：${displayPercent}`}>\n                    <Col span={20}>\n                        <div className=\"row-bar\" style={{ width: `${item.barPercent}%`, backgroundColor: item.color }}/>\n                    </Col>\n                </Tooltip>\n                <Col span={4}>\n                    <span className=\"ml20\">{ displayAmount }</span>\n                </Col>\n            </Row>\n        )\n    }\n\n    renderRowChart = (item: IPathItem) => {\n        return (\n            <Row className=\"mb10\">\n                <Col span={4}>{ item.title }：</Col>\n                <Col span={8}>{ this.renderRow(item) }</Col>\n            </Row>\n        )\n    }\n\n    render() {\n        const data = this.makeRowData();\n        return (\n            <div>\n                {\n                    data.map(this.renderRowChart)\n                }\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { Row, Col, Empty} from 'antd';\nimport Pie from '../../components/Pie';\nimport Bar from '../../components/Bar';\n\nimport { IChartsProps, IBill} from '../../declare';\n\nexport default class Charts extends React.Component<IChartsProps, {}> {\n\n    renderChart = (data: IBill[]) => {\n        return (\n            <Row>\n                <Col span={14}><Bar data={data}/></Col>\n                <Col className=\"vm\" span={10}><Pie data={data} /></Col>\n            </Row>\n        )\n    }\n\n    render() {\n        const { categoryBillData, typeBillData } = this.props;\n\n        return (\n            <Row>\n                <Col span={12} className=\"mt20\">\n                    <div className=\"mb10 title\">\n                        收入/支出统计：\n                    </div>\n                    {\n                        typeBillData.length > 0 ? this.renderChart(typeBillData) : (\n                            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                        )\n                    }\n                </Col>\n                <Col span={12} className=\"mt20\">\n                    <div className=\"mb10 title\">\n                        支出类型统计：\n                    </div>\n                    {\n                        categoryBillData.length > 0 ? this.renderChart(categoryBillData) : (\n                            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                        )\n                    }\n                </Col>\n            </Row>\n        )\n    }\n}\n","import {message} from 'antd';\nimport { IParamsObject } from '../../declare';\nimport { HOST } from '../../config/env';\n\nfunction toQueryString(paramsObject: IParamsObject) {\n    return Object\n        .keys(paramsObject)\n        .map((key: string) => `${encodeURIComponent(key)}=${encodeURIComponent(paramsObject[key])}`)\n        .join('&');\n}\n\nexport function post(url: string, data: Object, msg?: string) {\n    return fetch(HOST + url, {\n        body: JSON.stringify(data),\n        cache: 'no-cache',\n        headers: {\n            'content-type': 'application/json'\n        },\n        method: 'POST',\n    }).then(response => {\n        if (msg) {\n            message.success(msg);\n        }\n        return response.json()\n    })\n}\n\nexport function get(url: string, data?: Object, msg?: string) {\n\n    let query = '';\n\n    if (data && typeof data === 'object' && Object.keys(data).length > 0) {\n        // @ts-ignore\n        query = `?${toQueryString(data)}`;\n    }\n    const _url = `${HOST}${url}${query}`;\n\n    return fetch(_url, { cache: 'no-cache' })\n        .then(function(response) {\n            if (msg) {\n                message.success(msg);\n            }\n            return response.json();\n        })\n}\n","const isProduction = process.env.NODE_ENV;\n\nexport const HOST = isProduction ? '' : 'http://localhost:8800';\n\n","import { get, post } from '../utils/request';\nimport { IBillQuery, IAddBillParam } from '../declare';\n\nexport function getBillList(query: IBillQuery) {\n    return get('/api/bill', query)\n}\n\nexport function getBillCategories() {\n    return get('/api/bill/categories')\n}\n\nexport function addBillItem(item: IAddBillParam) {\n    return post('/api/bill', item, '添加成功')\n}\n","export const getRandomColor = () => {\n    return  '#'+(0x1000000+(Math.random())*0xffffff).toString(16).substr(1,6);\n}\n","import React from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { Spin, message } from 'antd';\n\nimport BillTable from \"./container/Table\";\nimport Filter from './container/Filter';\nimport AddBillForm from './container/AddBillForm';\nimport Charts  from \"./container/Charts\";\nimport { BILL_TYPE } from './constants';\nimport { IBill, IAppState, IFilter, IAddBillParam, IPathItem } from './declare';\n\nimport { getBillList, getBillCategories, addBillItem } from './request';\nimport {getRandomColor} from \"./utils/color\";\n\nimport './App.css';\nimport { getPercent} from \"./utils/math\";\n\nclass App extends React.Component<{}, IAppState> {\n\n    private filter: IFilter;\n\n    constructor(props: {}) {\n        super(props);\n        this.state = {\n            billList: [],\n            isFetchingBill: true,\n\n            billCategories: [],\n            isFetchingBillCategories: true,\n\n            billAmountList: []\n        }\n\n        this.filter = {\n            time: '',\n            category: ''\n        }\n    }\n\n    componentDidMount() {\n        this.setBillData();\n        this.setBillCategories();\n    }\n\n    setBillData = () => {\n        const { time, category } = this.filter;\n\n        this.setState({\n            isFetchingBill: true,\n        }, () => {\n            getBillList({\n                time,\n                category,\n            }).then((res) => {\n                this.setState({\n                    billList: res.data,\n                    isFetchingBill: false\n                })\n            })\n        })\n    }\n\n    setBillCategories = () => {\n        this. setState({\n            isFetchingBillCategories: true\n        }, () => {\n            getBillCategories().then((res) => {\n                this.setState({\n                    billCategories: res.data,\n                    isFetchingBillCategories: false,\n                });\n            })\n        })\n    }\n\n    onMonthChange = (time: string) => {\n        this.filter.time = time || '';\n        this.setBillData();\n    }\n\n    onCategoryChange = (category: string) => {\n        this.filter.category = category || '';\n        this.setBillData()\n    }\n\n    onAddBillItem = (item: IAddBillParam) => {\n        addBillItem(item).then(() => {\n            this.setBillData()\n        })\n    }\n\n    combineBillItem = (bill: IBill[], field: keyof IBill) => {\n        const result: IBill[] = [];\n        bill.forEach((item: IBill) => {\n            const target = result.find((i: IBill) => i[field] === item[field]);\n            if (target) {\n                target.amount += item.amount;\n            } else {\n                result.push(item);\n            }\n        });\n        return result;\n    }\n\n    getSum = (bill: IBill[]) => {\n        return bill.reduce((prev: number, next: IBill) => {\n            return prev + next.amount\n        }, 0);\n    }\n\n    getTypeBillData = () => {\n        const { billList } = this.state;\n        let copy = cloneDeep(billList);\n        let result = this.combineBillItem(copy, 'type');\n\n        const sum = this.getSum(result);\n\n        result.forEach((item: IBill) => {\n            item.percent = getPercent(item.amount, sum);\n            item.title = BILL_TYPE[item.type];\n            item.color = getRandomColor();\n        })\n\n        if (result.length === 1) {\n            result.push({\n                title: BILL_TYPE[Number(!result[0].type)],\n                percent: 0,\n                amount: 0,\n            } as IBill)\n        }\n\n        return result;\n    }\n\n    getCategoryBillData = () => {\n        const { billList } = this.state;\n        let copy = cloneDeep(billList);\n\n        copy = copy.filter(item => item.type === 0).sort((perv, next) => perv.amount - next.amount);\n\n        const result = this.combineBillItem(copy, 'category');\n\n        const sum = this.getSum(result);\n\n        result.forEach((item: IBill) => {\n            item.percent = getPercent(item.amount, sum);\n            item.color = getRandomColor()\n        })\n\n        return result;\n    }\n\n    render() {\n        const { isFetchingBill, isFetchingBillCategories, billList, billCategories } = this.state;\n        return (\n            <div className=\"container\">\n                <Filter\n                    onMonthChange={this.onMonthChange}\n                    categories={billCategories}\n                    onCategoryChange={this.onCategoryChange}\n                    isFisFetchingBillCategories={isFetchingBillCategories}\n                />\n                <AddBillForm\n                    isFisFetchingBillCategories={isFetchingBillCategories}\n                    categories={billCategories}\n                    onAddBillItem={this.onAddBillItem}\n                />\n                {\n                    isFetchingBill ? <Spin/> : (\n                        <React.Fragment>\n                            <Charts\n                                categoryBillData={this.getCategoryBillData()}\n                                typeBillData={this.getTypeBillData()}\n                            />\n                            <BillTable loading={isFetchingBill} data={billList} />\n                        </React.Fragment>\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}